name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        node-version: '20'  

    - name: Cache Maven packages
      uses: actions/cache@v3  # Use the latest version
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    - name: Compile the code
      run: ./mvnw compile

    - name: Run tests
      run: ./mvnw test

    - name: Package the project as a Docker image
      run: |
        docker build -t spring-petclinic:latest .

    - name: Log in to JFrog Artifactory
      env:
        JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
        JFROG_API_KEY: ${{ secrets.JFROG_API_KEY }}
      run: |
        echo "Logging in to JFrog Artifactory"
        echo $JFROG_API_KEY | docker login ${{ secrets.JFROG_URL }} -u $JFROG_USERNAME --password-stdin

    - name: Publish the Docker image to JFrog Artifactory
      run: |
        docker tag spring-petclinic:latest ${{ secrets.JFROG_URL }}/docker-repo/spring-petclinic:latest
        docker push ${{ secrets.JFROG_URL }}/docker-repo/spring-petclinic:latest
