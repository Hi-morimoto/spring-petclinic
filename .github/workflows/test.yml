name: Build and Tag Docker Image

on:
  push:
    branches:
      - main
      
jobs:
  build-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Compile and package the code
        run: ./mvnw package -DskipTests

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: JF_URL
          JF_API_TOKEN: JFROG_ACCESS_TOKEN
          JF_CLI_LOG_LEVEL: INFO

      - name: Build Tag and push Docker Image
        env:
          IMAGE_NAME: hiroyukimorimoto.jfrog.io/test-docker/jfrog-docker-example-image:${{ github.run_number }}
        run: |
          ls -la target  # List the contents of the target directory for debugging
          jf docker build -t $IMAGE_NAME .
          jf docker push $IMAGE_NAME
          
      - name: Publish Build info With JFrog CLI
        env:
          # Generated and maintained by GitHub
          JFROG_CLI_BUILD_NAME: jfrog-docker-build-example
          # JFrog organization secret
          JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}
        run: |
          # Export the build name and build number
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish
